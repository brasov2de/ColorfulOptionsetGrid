<?xml version="1.0" encoding="utf-8"?>
<manifest>
  <control namespace="ORBIS" constructor="ColorfulOptionsetGrid" version="0.0.37" display-name-key="ORBIS_ColorfulOptionsetGrid" description-key="ORBIS_ColorfulOptionsetGrid_Description" control-type="standard" preview-image="css/imgs/Preview.png">
    <!-- dataset node represents a set of entity records on CDS; allow more than one datasets -->
    <!--type-group name="colorfulTypes">
       <type>OptionSet</type>
       <type>TwoOptions</type>    
       <type>MultiSelectOptionSet</type>   
    </type-group-->
    <data-set name="dataset" display-name-key="Dataset" >
      <!-- Custom Page cannot handle group-type -->
      <!--property-set name="optionset1" display-name-key="Optionset 1" description-key="Property_Desc_Key" of-type="TwoOptions" usage="bound" required="false" />
      <property-set name="optionset2" display-name-key="Optionset 2" description-key="Property_Desc_Key" of-type="TwoOptions" usage="bound" required="false" />
      <property-set name="optionset3" display-name-key="Optionset 3" description-key="Property_Desc_Key" of-type="TwoOptions" usage="bound" required="false" /-->
      <!--Model-driven-->
      <property-set name="optionset1" display-name-key="Optionset 1" description-key="Property_Desc_Key" of-type-group="colorfulTypes" usage="bound" required="false" />
      <property-set name="optionset2" display-name-key="Optionset 2" description-key="Property_Desc_Key" of-type-group="colorfulTypes" usage="bound" required="false" />
      <property-set name="optionset3" display-name-key="Optionset 3" description-key="Property_Desc_Key" of-type-group="colorfulTypes" usage="bound" required="false" />
      <!-- UNCOMMENT TO ADD PROPERTY-SET NODE
      <property-set name="samplePropertySet" display-name-key="Property_Display_Key" description-key="Property_Desc_Key" of-type="SingleLine.Text" usage="bound" required="true" />
      -->
    </data-set>
      <type-group name="colorfulTypes">
       <type>OptionSet</type>
       <type>TwoOptions</type>    
       <type>MultiSelectOptionSet</type>   
    </type-group>
    <property name="displayTextType" display-name-key="Display_text_type" description-key="Display text type" of-type="Enum" usage="input" required="true">
      <value name="SIMPLE" display-name-key="No decoration" description-key="No decoration" default="true">SIMPLE</value>
      <value name="BOX" display-name-key="Colorful background" description-key="Colorful background">BOX</value>
      <value name="BORDER" display-name-key="Colorful Border" description-key="Colorful Border">BORDER</value>
      <value name="NOTEXT" display-name-key="No text" description-key="Only the icon will be shown">NOTEXT</value>
    </property>
    <property name="displayIconType" display-name-key="Icon definition" description-key="Icon definition" of-type="Enum" usage="input" required="true">
      <value name="NONE" display-name-key="No icon" description-key="No icon">NONE</value>
      <value name="NAME" display-name-key="Icon name or JSON" description-key="Using the icon name or a JSON config {value: {icon, color}}" default="true">NAME</value>     
    </property>
    <property name="isEditable" display-name-key="isEditable" description-key="ColumnIsEditable" of-type="Enum" usage="input" required="true" >
      <value name="Editable" display-name-key="Editable" description-key="editable">Editable</value>
      <value name="ReadOnly" display-name-key="ReadOnly" description-key="ReadOnly" default="true">ReadOnly</value>
    </property>
    <property name="defaultIcon" display-name-key="Default Icon name" description-key="The default name of the icon" of-type="SingleLine.Text" usage="input" required="false" default-value="CircleShapeSolid" />
    <property name="iconConfig1" display-name-key="iconConfig1" description-key="iconConfig1" of-type="SingleLine.Text" usage="input" required="false" />
    <property name="iconConfig2" display-name-key="iconConfig2" description-key="iconConfig2" of-type="SingleLine.Text" usage="input" required="false" />
    <property name="iconConfig3" display-name-key="iconConfig3" description-key="iconConfig3" of-type="SingleLine.Text" usage="input" required="false" />
    <resources>
      <code path="index.ts" order="1" />
      <css path="css/ColorfulOptionsetGrid.css" order="1" />
      <resx path="strings/ColorfulOptionsetGrid.1033.resx" version="1.0.0" />
      <!-- UNCOMMENT TO ADD MORE RESOURCES
      <css path="css/ColorfulOptionsetGrid.css" order="1" />
      <resx path="strings/ColorfulOptionsetGrid.1033.resx" version="1.0.0" />
      -->
    </resources>
    <feature-usage>
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    <!-- UNCOMMENT TO ENABLE THE SPECIFIED API
    <feature-usage>
      <uses-feature name="Device.captureAudio" required="true" />
      <uses-feature name="Device.captureImage" required="true" />
      <uses-feature name="Device.captureVideo" required="true" />
      <uses-feature name="Device.getBarcodeValue" required="true" />
      <uses-feature name="Device.getCurrentPosition" required="true" />
      <uses-feature name="Device.pickFile" required="true" />
      <uses-feature name="Utility" required="true" />
      <uses-feature name="WebAPI" required="true" />
    </feature-usage>
    -->
  </control>
</manifest>